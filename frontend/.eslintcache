[{"/Users/jedgodsey/sei/myndex/frontend/src/models/myndex.js":"1","/Users/jedgodsey/sei/myndex/frontend/src/components/IndexCard.js":"2","/Users/jedgodsey/sei/myndex/frontend/src/pages/Dashboard.js":"3","/Users/jedgodsey/sei/myndex/frontend/src/App.js":"4","/Users/jedgodsey/sei/myndex/frontend/src/pages/AddIndex.js":"5","/Users/jedgodsey/sei/myndex/frontend/src/models/tradier.js":"6","/Users/jedgodsey/sei/myndex/frontend/src/components/ListItem.js":"7","/Users/jedgodsey/sei/myndex/frontend/src/components/Tag.js":"8","/Users/jedgodsey/sei/myndex/frontend/src/components/TagSelect.js":"9","/Users/jedgodsey/sei/myndex/frontend/src/models/user.js":"10","/Users/jedgodsey/sei/myndex/frontend/src/components/AppBar.js":"11","/Users/jedgodsey/sei/myndex/frontend/src/index.js":"12","/Users/jedgodsey/sei/myndex/frontend/src/components/UserAuth.js":"13","/Users/jedgodsey/sei/myndex/frontend/src/pages/Home.js":"14","/Users/jedgodsey/sei/myndex/frontend/src/components/AuthBox.js":"15","/Users/jedgodsey/sei/myndex/frontend/src/components/Testcard.js":"16","/Users/jedgodsey/sei/myndex/frontend/src/components/AnimatedChart.js":"17","/Users/jedgodsey/sei/myndex/frontend/src/components/Guide.js":"18","/Users/jedgodsey/sei/myndex/frontend/src/components/Rich.js":"19","/Users/jedgodsey/sei/myndex/frontend/src/utility/calcs.js":"20","/Users/jedgodsey/sei/myndex/frontend/src/utility/utils.js":"21"},{"size":1562,"mtime":1606927788370,"results":"22","hashOfConfig":"23"},{"size":1927,"mtime":1606960108422,"results":"24","hashOfConfig":"23"},{"size":550,"mtime":1606956971387,"results":"25","hashOfConfig":"23"},{"size":1896,"mtime":1606958362179,"results":"26","hashOfConfig":"23"},{"size":3394,"mtime":1606960108425,"results":"27","hashOfConfig":"23"},{"size":832,"mtime":1606929366079,"results":"28","hashOfConfig":"23"},{"size":194,"mtime":1606605443024,"results":"29","hashOfConfig":"23"},{"size":731,"mtime":1606541575188,"results":"30","hashOfConfig":"23"},{"size":2958,"mtime":1606937219687,"results":"31","hashOfConfig":"23"},{"size":1332,"mtime":1606929366080,"results":"32","hashOfConfig":"23"},{"size":356,"mtime":1606376436950,"results":"33","hashOfConfig":"23"},{"size":286,"mtime":1606374899148,"results":"34","hashOfConfig":"23"},{"size":1217,"mtime":1606864722986,"results":"35","hashOfConfig":"23"},{"size":414,"mtime":1606968533472,"results":"36","hashOfConfig":"23"},{"size":2655,"mtime":1606976786353,"results":"37","hashOfConfig":"23"},{"size":3098,"mtime":1606957592943,"results":"38","hashOfConfig":"23"},{"size":824,"mtime":1606970120369,"results":"39","hashOfConfig":"23"},{"size":1072,"mtime":1606974677882,"results":"40","hashOfConfig":"23"},{"size":2977,"mtime":1606972673957,"results":"41","hashOfConfig":"23"},{"size":5717,"mtime":1606972016586,"results":"42","hashOfConfig":"23"},{"size":1722,"mtime":1606972353200,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qyuv2m",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jedgodsey/sei/myndex/frontend/src/models/myndex.js",[],"/Users/jedgodsey/sei/myndex/frontend/src/components/IndexCard.js",[],"/Users/jedgodsey/sei/myndex/frontend/src/pages/Dashboard.js",[],"/Users/jedgodsey/sei/myndex/frontend/src/App.js",[],"/Users/jedgodsey/sei/myndex/frontend/src/pages/AddIndex.js",[],"/Users/jedgodsey/sei/myndex/frontend/src/models/tradier.js",[],"/Users/jedgodsey/sei/myndex/frontend/src/components/ListItem.js",[],"/Users/jedgodsey/sei/myndex/frontend/src/components/Tag.js",[],"/Users/jedgodsey/sei/myndex/frontend/src/components/TagSelect.js",["87","88"],"/Users/jedgodsey/sei/myndex/frontend/src/models/user.js",[],"/Users/jedgodsey/sei/myndex/frontend/src/components/AppBar.js",[],"/Users/jedgodsey/sei/myndex/frontend/src/index.js",[],"/Users/jedgodsey/sei/myndex/frontend/src/components/UserAuth.js",["89","90"],"/Users/jedgodsey/sei/myndex/frontend/src/pages/Home.js",[],"/Users/jedgodsey/sei/myndex/frontend/src/components/AuthBox.js",["91"],"/Users/jedgodsey/sei/myndex/frontend/src/components/Testcard.js",[],"/Users/jedgodsey/sei/myndex/frontend/src/components/AnimatedChart.js",[],"/Users/jedgodsey/sei/myndex/frontend/src/components/Guide.js",[],"/Users/jedgodsey/sei/myndex/frontend/src/components/Rich.js",[],"/Users/jedgodsey/sei/myndex/frontend/src/utility/calcs.js",["92"],"// import { normalizeValues } from './utils';\n\nconst thicknessPad = {\n  xlarge: 'large',\n  large: 'medium',\n  medium: 'small',\n  small: 'xsmall',\n  xsmall: 'xxsmall',\n};\n\nexport const round = (value, decimals) =>\n  Number(`${Math.round(`${value}e${decimals}`)}e-${decimals}`);\n\nconst alignMax = (value, interval) => {\n  if (value > 0) return value - (value % interval) + interval;\n  if (value < 0) return value + (value % interval);\n  return value;\n};\n\nconst alignMin = (value, interval) => {\n  if (value > 0) return value - (value % interval);\n  if (value < 0) return value - (value % interval) - interval;\n  return value;\n};\n\nexport const calcBounds = (values, options = {}) => {\n  // coarseness influences the rounding of the bounds, the smaller the\n  // number, the more the bounds will be rounded. e.g. 111 -> 110 -> 100\n  // Normalize to an array. Backwards compatible has no coarseness for x-axis\n  const coarseness = (Array.isArray(options.coarseness) &&\n    options.coarseness) ||\n    (options.coarseness && [undefined, options.coarseness]) || [undefined, 5];\n  // the number of steps is one less than the number of labels\n  const steps = options.steps || [1, 1];\n  const calcValues = normalizeValues(values || []);\n\n  // min and max values\n  let minX;\n  let maxX;\n  let minY;\n  let maxY;\n  if (calcValues.length) {\n    // Calculate the max and min values.\n    calcValues\n      .filter(value => value !== undefined)\n      .forEach(value => {\n        const x = value.value[0];\n        if (x !== undefined) {\n          minX = minX === undefined ? x : Math.min(minX, x);\n          maxX = maxX === undefined ? x : Math.max(maxX, x);\n        }\n        const y = value.value[1];\n        if (y !== undefined) {\n          minY = minY === undefined ? y : Math.min(minY, y);\n          maxY = maxY === undefined ? y : Math.max(maxY, y);\n        }\n        // handle ranges of values\n        const y2 = value.value[2];\n        if (y2 !== undefined) {\n          minY = Math.min(minY, y2);\n          maxY = Math.max(maxY, y2);\n        }\n      });\n\n    // when max === min, offset them so we can show something\n    if (maxX === minX) {\n      if (maxX > 0) minX = maxX - 1;\n      else maxX = minX + 1;\n    }\n    if (maxY === minY) {\n      if (maxY > 0) minY = maxY - 1;\n      else maxY = minY + 1;\n    }\n\n    // Calculate some reasonable bounds based on the max and min values.\n    // This is so values like 87342.12 don't end up being displayed as the\n    // graph axis labels.\n    const [cX, cY] = coarseness;\n    if (cX) {\n      const deltaX = maxX - minX;\n      const intervalX = Number.parseFloat((deltaX / cX).toPrecision(1));\n      minX = alignMin(minX, intervalX);\n      maxX = alignMax(maxX, intervalX);\n    }\n    if (cY) {\n      const deltaY = maxY - minY;\n      const intervalY = Number.parseFloat((deltaY / cY).toPrecision(1));\n      minY = alignMin(minY, intervalY);\n      maxY = alignMax(maxY, intervalY);\n    }\n\n    if (minY < 0 && maxY > 0 && Math.abs(minY) !== Math.abs(maxY)) {\n      // Adjust min and max when crossing 0 to ensure 0 will be shown on\n      // the Y axis based on the number of steps.\n\n      // const ratio = Math.abs(max) / Math.abs(min);\n      let stepInterval = (maxY - minY) / steps[1];\n      const minSteps = minY / stepInterval;\n      const maxSteps = maxY / stepInterval;\n      if (Math.abs(minSteps) < Math.abs(maxSteps)) {\n        stepInterval = maxY / Math.floor(maxSteps);\n        maxY = stepInterval * Math.floor(maxSteps);\n        minY = stepInterval * Math.floor(minSteps);\n      } else {\n        stepInterval = Math.abs(minY / Math.ceil(minSteps));\n        minY = stepInterval * Math.ceil(minSteps);\n        maxY = stepInterval * Math.ceil(maxSteps);\n      }\n    }\n  }\n\n  let bounds;\n  if (calcValues.length)\n    bounds = [\n      [minX, maxX],\n      [minY, maxY],\n    ];\n  else bounds = [[], []];\n  return bounds;\n};\n\nexport const calcs = (values = [], options = {}) => {\n  // the number of steps is one less than the number of labels\n  const steps = options.steps || [1, 1];\n  const bounds = options.bounds || calcBounds(values, options);\n  if (options.min !== undefined) bounds[1][0] = options.min;\n  if (options.max !== undefined) bounds[1][1] = options.max;\n\n  const dimensions = [\n    round(bounds[0][1] - bounds[0][0], 2),\n    round(bounds[1][1] - bounds[1][0], 2),\n  ];\n\n  // Calculate x and y axis values across the specfied number of steps.\n  const yAxis = [];\n  let y = bounds[1][1];\n  // To deal with javascript math limitations, round the step with 4 decimal\n  // places and then push the values with 2 decimal places\n  const yStepInterval = round(dimensions[1] / steps[1], 4);\n  while (round(y, 2) >= bounds[1][0]) {\n    yAxis.push(round(y, 2));\n    y -= yStepInterval;\n  }\n\n  const xAxis = [];\n  let x = bounds[0][0];\n  const xStepInterval = round(dimensions[0] / steps[0], 4);\n  while (round(x, 2) <= bounds[0][1]) {\n    xAxis.push(round(x, 2));\n    x += xStepInterval;\n  }\n\n  let { thickness } = options;\n  if (!thickness) {\n    // Set bar thickness based on number of values being rendered.\n    // Someday, it would be better to include the actual rendered size.\n    // These values were emirically determined, trying to balance visibility\n    // and overlap across resolutions.\n    if (values.length < 5) {\n      thickness = 'xlarge';\n    } else if (values.length < 11) {\n      thickness = 'large';\n    } else if (values.length < 21) {\n      thickness = 'medium';\n    } else if (values.length < 61) {\n      thickness = 'small';\n    } else if (values.length < 121) {\n      thickness = 'xsmall';\n    } else {\n      thickness = 'hair';\n    }\n  }\n\n  const pad = thicknessPad[thickness];\n\n  return { axis: [xAxis, yAxis], bounds, dimensions, pad, thickness };\n};\n","/Users/jedgodsey/sei/myndex/frontend/src/utility/utils.js",[],{"ruleId":"93","severity":1,"message":"94","line":28,"column":13,"nodeType":"95","messageId":"96","endLine":28,"endColumn":24},{"ruleId":"93","severity":1,"message":"97","line":29,"column":13,"nodeType":"95","messageId":"96","endLine":29,"endColumn":19},{"ruleId":"98","severity":2,"message":"99","line":15,"column":16,"nodeType":"95","messageId":"100","endLine":15,"endColumn":21},{"ruleId":"101","severity":2,"message":"102","line":22,"column":5,"nodeType":"95","messageId":"103","endLine":22,"endColumn":14},{"ruleId":"93","severity":1,"message":"104","line":3,"column":10,"nodeType":"95","messageId":"96","endLine":3,"endColumn":16},{"ruleId":"101","severity":2,"message":"105","line":35,"column":22,"nodeType":"95","messageId":"103","endLine":35,"endColumn":37},"no-unused-vars","'suggestions' is assigned a value but never used.","Identifier","unusedVar","'search' is assigned a value but never used.","no-restricted-globals","Unexpected use of 'event'.","defaultMessage","no-undef","'UserModel' is not defined.","undef","'Button' is defined but never used.","'normalizeValues' is not defined."]